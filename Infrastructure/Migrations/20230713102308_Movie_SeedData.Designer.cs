// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20230713102308_Movie_SeedData")]
    partial class Movie_SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Domain.Entities.Casts.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CastOrder")
                        .HasColumnType("INTEGER");

                    b.Property<char>("CharGender")
                        .HasColumnType("TEXT");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CastOrder = 1,
                            CharGender = 'F',
                            CharName = "Cast1",
                            MovieId = 1,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 2,
                            CastOrder = 1,
                            CharGender = 'M',
                            CharName = "Cast2",
                            MovieId = 1,
                            PersonId = 4
                        },
                        new
                        {
                            Id = 3,
                            CastOrder = 2,
                            CharGender = 'F',
                            CharName = "Cast3",
                            MovieId = 1,
                            PersonId = 5
                        },
                        new
                        {
                            Id = 4,
                            CastOrder = 1,
                            CharGender = 'F',
                            CharName = "Cast4",
                            MovieId = 2,
                            PersonId = 6
                        },
                        new
                        {
                            Id = 5,
                            CastOrder = 2,
                            CharGender = 'M',
                            CharName = "Cast5",
                            MovieId = 2,
                            PersonId = 7
                        },
                        new
                        {
                            Id = 6,
                            CastOrder = 3,
                            CharGender = 'M',
                            CharName = "Cast6",
                            MovieId = 2,
                            PersonId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.Movies.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 1,
                            Title = "Movie1"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 2,
                            Title = "Movie2"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Persons.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = 'F',
                            Name = "Director1"
                        },
                        new
                        {
                            Id = 2,
                            Gender = 'M',
                            Name = "Director2"
                        },
                        new
                        {
                            Id = 3,
                            Gender = 'F',
                            Name = "Person3"
                        },
                        new
                        {
                            Id = 4,
                            Gender = 'M',
                            Name = "Person4"
                        },
                        new
                        {
                            Id = 5,
                            Gender = 'M',
                            Name = "Person5"
                        },
                        new
                        {
                            Id = 6,
                            Gender = 'F',
                            Name = "Person6"
                        },
                        new
                        {
                            Id = 7,
                            Gender = 'M',
                            Name = "Person7"
                        },
                        new
                        {
                            Id = 8,
                            Gender = 'M',
                            Name = "Person8"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
